name: Terraform Apply

on:
  pull_request:
    types:
      - closed  # Trigger only when the PR is closed (merged or rejected)


  # Allow manual trigger via GitHub UI (workflow_dispatch)
  workflow_dispatch:

env:
  AWS_REGION: ap-south-1  # Mumbai region
  CLUSTER_NAME: personio-cluster
  TF_STATE_BUCKET: personio-aws-infra-statebucket  
  PLAIN_FILE_KEY: terraform/tfplan
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  IMAGE_NAME: personio-app
  IMAGE_TAG: ${{ github.sha }}
  

jobs:
  terraform-apply:
    if: ${{ github.event.pull_request.merged == true }}  
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0  # Consistent version
    
    - name: Create terraform directory
      run: mkdir -p terraform

    - name: Download tfplan from s3
      run: aws s3 cp s3://${{ env.TF_STATE_BUCKET }}/${{ env.PLAIN_FILE_KEY }} terraform/tfplan

    - name: Terraform Init
      run: |
        cd terraform
        terraform init -backend-config="bucket=${{ env.TF_STATE_BUCKET }}" \
                       -backend-config="key=terraform/state/terraform.tfstate" \
                       -backend-config="region=${{ env.AWS_REGION }}"        

    - name: Verify Artifact Exists
      run: |
        ls -l terraform
        cat terraform/tfplan

#    - name: Terraform Destroy Apply
#      run: |
#       cd terraform
#       terraform apply -auto-approve tfplan

       
    - name: Terraform Apply
      run: |
        cd terraform
        terraform apply -auto-approve tfplan  # Apply the downloaded plan

    - name: Terraform Apply Output
      run: terraform output  # Output any relevant results from the Terraform apply

      